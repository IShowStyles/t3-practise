generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(cuid())
  email           String           @unique
  emailVerified   DateTime?
  image           String?
  accounts        Account[]
  sessions        Session[]
  username        String           @unique
  password        String
  role            UserRole         @default(USER)
  agreements      Agreement[]      @relation("UserAgreements")
  contactRequests ContactRequest[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String?
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model PizzaProduct {
  id            String      @id @default(uuid())
  image         String
  name          String      @unique
  price         Float
  description   String
  isTraditional Boolean     @default(true)
  size          PizzaSize
  agreement     Agreement[] @relation("AgreementPizzaProducts")
}

model Agreement {
  id            String         @id @default(uuid())
  content       String
  editional     String
  users         User[]         @relation("UserAgreements")
  pizzaProducts PizzaProduct[] @relation("AgreementPizzaProducts")
}

model ContactRequest {
  id          Int     @id @default(autoincrement())
  phoneNumber String
  userId      String?
  user        User?   @relation(fields: [userId], references: [id])
  name        String
  content     String
}

enum UserRole {
  ADMIN
  USER
}

enum PizzaSize {
  Large
  Medium
  Small
}
